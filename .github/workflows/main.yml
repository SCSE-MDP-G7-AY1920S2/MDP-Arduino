# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request 
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # This is the list of steps this job will run.
    steps:
      # First of all, we clone the repo using the `checkout` action.
      - name: Checkout
        uses: actions/checkout@v2

      # We use the `arduino/setup-arduino-cli` action to install and
      # configure the Arduino CLI on the system.
      - name: Setup Arduino CLI
        uses: arduino/setup-arduino-cli@v1.0.0

      # We then install the platform, which one will be determined
      # dynamically by the build matrix.
      - name: Install platform
        run: |
          arduino-cli core update-index
          arduino-cli core install arduino:avr
      
      - name: Install official libraries
        run: |
          arduino-cli lib install DualVNH5019MotorShield@3.0.0
          arduino-cli lib install EnableInterrupt@1.1.0

      # Install custom libraries 
      - uses: actions/checkout@v2
        with:
          repository: mike-matera/FastPID
          ref: "v1.3.2"
          run: mv FastPID $HOME/Arduino/libraries

      - uses: actions/checkout@v2
        with:
          repository: hengkaiz/ZSharpIR
          run: mv ZSharpIR $HOME/Arduino/libraries
        
      # Finally, we compile the sketch, using the FQBN that was set
      # in the build matrix.
      - name: Compile Sketch
        run: arduino-cli compile --fqbn arduino:avr:uno ./arduinoMain
